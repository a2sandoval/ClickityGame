{"version":3,"sources":["components/Wrapper/Wrapper.js","components/Title/Title.js","Container.js","Column.js","Row.js","components/CarCard/CarCard.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Title","Container","key","concat","fluid","Column","size","split","map","join","id","Row","CarCard","value","onClick","alt","name","src","image","App","state","cars","currentScore","clicked","_this","indexOf","incrementScore","setState","resetGame","newGameScore","swal","shuffleIt","shuffledCars","array","i","length","j","Math","floor","random","_ref","randomCars","_this2","this","components_Wrapper_Wrapper","components_Title_Title","src_Container","src_Row","car","src_Column","components_CarCard_CarCard","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7d8fde0c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\n\nexport default Title;","import React from \"react\";\n\nconst Container = props =>\n  <div key=\"\" className={`container${props.fluid ? \"-fluid\" : \"\"}`}>\n    {props.children}\n  </div>;\n\nexport default Container;","import React from \"react\";\n\nconst Column = props => {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n  return (\n    <div key={size.id}className={size}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Column;","import React from \"react\";\n\nconst Row = props =>\n  <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>\n    {props.children}\n  </div>;\n\nexport default Row;","\nimport React from \"react\";\nimport \"./CarCard.css\";\n\nconst CarCard = props => (\n  <div \n    className=\"card\" \n    value={props.id} \n    onClick={() => props.onClick(props.id)}\n  >\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default CarCard;","import React, { Component } from \"react\";\nimport swal from 'sweetalert';\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Container from \"./Container\";\nimport Column from \"./Column\";\nimport Row from \"./Row\";\nimport CarCard from \"./components/CarCard\";\nimport cars from \"./cars.json\";\nimport \"./App.css\";\n\n// Standard javascript for shuffling arrays\n\nfunction randomCars(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\n//setting the state, getting status of cars, score, and if cars have been clicked\nclass App extends Component {\n  state = {\n    cars,\n    currentScore: 0,\n    clicked: [],\n  };\n//logic for when an image is clicked\n  onClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.incrementScore();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.resetGame();\n    }\n  };\n//logic for incrementing score for when an image is clicked\n  incrementScore = () => {\n    const newGameScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newGameScore,\n    });\n    //how you win the game, will prompt a win after 4 consecutive right guesses\n    if (newGameScore === 4) {\n      swal(\"You Won!\");\n    this.shuffleIt();\n    this.resetGame();\n    }\n    this.shuffleIt();\n    \n  };\n//function to reset the score, and status of the click on the imgages\n//also a reshuffle\n  resetGame = () => {\n    this.setState({\n      currentScore: 0,\n      clicked: []\n    });\n    this.shuffleIt();\n  };\n\n  shuffleIt = () => {\n    let shuffledCars = randomCars(cars);\n    this.setState({ cars: shuffledCars });\n  };\n//render function to render the components of the app also gets the cars using the map method\n  render() {\n    return (\n      <Wrapper>\n\n        <Title>\n          <br></br>\n          How good is your memory? \n          <br></br>\n          Don't click on the same car more than once! \n          <br></br>\n          Memorize 4 to win!\n          <br></br>\n          <br></br>\n          Score = {this.state.currentScore}\n        </Title>\n        <Container>\n          <Row>\n            {this.state.cars.map(car => (\n              <Column size=\"md-4 sm-4 lg-4\">\n                <CarCard\n                  key={car.id}\n                  onClick={this.onClick}\n                  incrementScore={this.incrementScore}\n                  resetGame={this.resetGame}\n                  shuffleIt={this.shuffleIt}\n                  id={car.id}\n                  image={car.image}\n                />\n                \n              </Column>\n            ))}\n          </Row>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}